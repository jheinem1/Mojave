/// <reference types="@rbxts/compiler-types" />
import { default as AsyncFunction } from "./ClientAsyncFunction";
import { default as Event } from "./ClientEvent";
import { default as GameMessagingEvent } from "./ClientMessagingEvent";
import config from "../configuration";
import ClientFunction, { default as Function } from "./ClientFunction";
export declare const SetConfiguration: typeof config.SetClientConfiguration;
export declare const GetConfiguration: typeof config.GetConfiguration;
export declare function GetEvent<ConnectArgs extends ReadonlyArray<unknown> = Array<unknown>, CallArguments extends ReadonlyArray<unknown> = Array<unknown>>(id: string): Event<ConnectArgs, CallArguments>;
export declare function GetEventAsync<ConnectArgs extends ReadonlyArray<unknown> = Array<unknown>, CallArguments extends ReadonlyArray<unknown> = Array<unknown>>(id: string): Promise<Event<ConnectArgs, CallArguments>>;
export declare function GetFunctionAsync<CallArgs extends ReadonlyArray<unknown> = Array<unknown>, ServerReturnType = unknown>(id: string): Promise<ClientFunction<CallArgs, ServerReturnType>>;
export declare function GetAsyncFunctionAsync<CallbackArgs extends ReadonlyArray<unknown> = Array<unknown>, CallArgs extends ReadonlyArray<unknown> = Array<unknown>, ServerReturnType = unknown>(id: string): Promise<AsyncFunction<CallbackArgs, CallArgs, ServerReturnType, unknown>>;
export declare function GetAsyncFunction<CallbackArgs extends ReadonlyArray<unknown> = Array<unknown>, CallArgs extends ReadonlyArray<unknown> = Array<unknown>, ServerReturnType = unknown>(id: string): AsyncFunction<CallbackArgs, CallArgs, ServerReturnType, unknown>;
export { Event, AsyncFunction, GameMessagingEvent, Function };
